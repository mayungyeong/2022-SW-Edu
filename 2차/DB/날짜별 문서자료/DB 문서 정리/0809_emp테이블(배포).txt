SQL> create table sosiTest
     as
     select * from  sosi ;

SQL> @C:/workspace/mysosi.sql
SQL> start C:/workspace/mysosi.sql

drop table emp ;
drop table dept ;
drop table salgrade ;
drop table bonus ;
commit ;

★----------------------------------------------------------------------------
CREATE TABLE dept (
   DEPTNO number(2) not null ,
   DNAME VARCHAR(14),
   LOC VARCHAR(13),
   constraint  dept_pk primary key(DEPTNO) 
 );
commit ;

INSERT INTO DEPT VALUES (10,'ACCOUNTING','NEW YORK');
INSERT INTO DEPT VALUES (20,'RESEARCH','DALLAS');
INSERT INTO DEPT VALUES (30,'SALES','CHICAGO');
INSERT INTO DEPT VALUES (40,'OPERATIONS','BOSTON');
insert into dept values( 33, 'developer',  'suwon' );
commit ;
★----------------------------------------------------------------------------
drop table emp ;
CREATE TABLE emp (
   EMPNO int not null ,
   ENAME VARCHAR(10) ,
   JOB VARCHAR(9) ,
   MGR number(4)  constraint emp_empno_self  references emp(empno) ,
   HIREDATE date ,
   SAL int ,
   COMM int ,
   DEPTNO number(2) not null ,
   constraint emp_pk  primary key(EMPNO) ,
   constraint emp_dept_fk  foreign key(DEPTNO)  references dept(deptno) 
 );
commit;

INSERT INTO EMP VALUES(7369,'SMITH','CLERK',7902,'1980-12-17',800,null,20);
INSERT INTO EMP VALUES(7499,'ALLEN','SALESMAN',7698,'1981-02-20',1600,300,30);
INSERT INTO EMP VALUES(7521,'WARD','SALESMAN',7698,'1981-02-22',1250,200,30);
INSERT INTO EMP VALUES(7566,'JONES','MANAGER',7839,'1981-04-02',2975,30,20);
INSERT INTO EMP VALUES(7654,'MARTIN','SALESMAN',7698,'1981-09-28',1250,300,30);
INSERT INTO EMP VALUES(7698,'BLAKE','MANAGER',7839,'1981-04-01',2850,null,30);
INSERT INTO EMP VALUES(7782,'CLARK','MANAGER',7839,'1981-06-01',2450,null,10);
INSERT INTO EMP VALUES(7788,'SCOTT','ANALYST',7566,'1982-10-09',3000,null,20);
INSERT INTO EMP VALUES(7839,'KING','PRESIDENT',null,'1981-11-17',5000,3500,10);
INSERT INTO EMP VALUES(7844,'TURNER','SALESMAN',7698,'1981-09-08',1500,0,30);
INSERT INTO EMP VALUES(7876,'ADAMS','CLERK',7788,'1983-01-12',1100,null,20);
INSERT INTO EMP VALUES(7900,'JAMES','CLERK',7698,'1981-10-03',950,null,30);
INSERT INTO EMP VALUES(7902,'FORD','ANALYST',7566,'1981-10-3',3000,null,20);
INSERT INTO EMP VALUES(7934,'MILLER','CLERK',7782,'1982-01-23',1300,null,10);
 insert into  emp
        values( 8856, 'hong', 'sale', 7844, '1997-01-23', 1500, 30,30) ;
 insert into  emp
        values( 8878, 'lee', 'sale', 7876, '1998-07-29', 390, 150,20) ;
 insert into  emp
        values( 9900, 'kim', 'model', 7839, sysdate,  170,0, 30) ;
 insert into  emp
        values( 9934, 'goo', 'model', 7844, '1996-11-30',  3200, 210, 40) ;
insert into  emp
        values( 9935, 'gugu', 'teacher', 7839, sysdate, 2200, 400, 33) ;

commit ;
select * from  emp ;
commit ;

★----------------------------------------------------------------------------
CREATE TABLE SALGRADE (
  GRADE int primary key ,
  LOSAL int,
  HISAL int
 );

 INSERT INTO SALGRADE VALUES (1,700,1200);
 INSERT INTO SALGRADE VALUES (2,1201,1400);
 INSERT INTO SALGRADE VALUES (3,1401,2000);
 INSERT INTO SALGRADE VALUES (4,2001,3000);
 INSERT INTO SALGRADE VALUES (5,3001,9999);
 insert into salgrade  values( 6, 4001,   6000 );
 insert into salgrade  values( 7, 6001,   7000 );
 insert into salgrade  values( 8, 7001,   9000 );
commit;


★----------------------------------------------------------------------------
 CREATE TABLE  BONUS
  as 
  select ename, job, sal, comm  from emp  ;

clear  screen
select  empno, ename, mgr from  emp;
col  job  for a10;
col  ename  for a10;
col  empno  for 9999;
col  dname  for a10;
col  sal  for 9999;


drop table emp ;
drop table dept ;
drop table salgrade ;
drop table bonus ;

C:\oraclexe\app\oracle\product\11.2.0\server\rdbms\admin

--회사가면 많이 사용합니다  @=start ~~~.sql문서 실행하는 명령어입니다 
SQL> @C:\oraclexe\app\oracle\product\11.2.0\server\rdbms\admin\scott.sql
SQL> commit ;
SQL> show user;
SQL> alter user scott identified by tiger ;
SQL> conn scott/tiger
SQL> show user;
_________________________________________________________
----특정문자기호로 채우는 함수 Lpad/Rpad함수
SQL> select empno, ename, sal,  Lpad(sal, 10, '*') as 잔액 from emp ;

SQL>select  empno,ename,job, hiredate  from  emp;

----날짜일수를 구하는 함수   months_between함수 => 개월수
----날짜형 to_date,  문자형 to_char(sysdate, 'yyyymmdd')
SQL>  select * from guest where wdate <= '18/01/18';
SQL>  select * from guest where wdate < '18/01/18';


SQL>  set linesize 1500
SQL>  set pagesize 1500
SQL> select  ename, hiredate , substr(to_char(hiredate, 'yy'),1,2)  from emp;
SQL> select empno, ename, job,
         to_char(hiredate, 'yyyy-mm-dd day' )  as 날짜 from emp ;
SQL> select  empno, ename, job, hiredate,
        trunc( months_between(sysdate,  hiredate) ) as 월수 from emp ;
SQL> select  empno, ename, job, hiredate,
         months_between(sysdate,  hiredate)  as 월수 from emp ;
SQL> select  empno,ename , job, hiredate,
        to_date(to_char(sysdate, 'yyyymmdd')) -    
        to_date(to_char(hiredate,'yyyymmdd'))  as 일수 from  emp ;
SQL> select  empno,ename , job, hiredate,
        round(sysdate-hiredate)  as 일수 from  emp ;
SQL> select * from emp  where  hiredate < to_date('1982/01/23') ;
SQL> select empno, ename, job, hiredate  from  emp
       where  hiredate  between  to_char('1981/01/01')  and to_char('1982/12/31') ;

databse 처음/경험=숙련자
ㄴ교재에 기술한 개념 2번 읽어보셔요. table, sequence, 제약 , 조회select
ㄴ데이터베이스필요할까?  은행에서 본인의 입출금거래 전부 기록.../출국할때 여권... /여러분학교증명서,성적증명서
★----------------------------------------------------------------------------
과제 테이블명 : student
drop table student ;
create table student( 
  idx number(4) primary key,
  name varchar2(10)  not null, 
  kor number(3) default 0 , 
  eng number(3) default 0 ,
  mat number(3) default 0
);
commit ;

drop sequence student_seq ;
create sequence student_seq ;
select sequence_name from user_sequences ;
commit ;

insert into student values(student_seq.nextval, '둘리짱', 90, 80, 95) ;
insert into student values(student_seq.nextval, '또치군', 75, 90, 65) ;
insert into student values(student_seq.nextval, '고길동', 100, 95, 90) ;
insert into student values(student_seq.nextval, '마이콜', 60, 60, 60) ;
insert into student values(student_seq.nextval, '도우넛', 75, 80, 75) ;
insert into student values(student_seq.nextval, '희동이', 80, 78, 90) ;
commit ;

select * from student ;
commit ;

학생student 필드컬럼구성
-- idx, 숫자(4), 기본키  primary key
-- name, 문자(10), 널허용X  not null 
-- kor, 숫자(3) / eng, 숫자(3) / mat, 숫자(3)  default 0 지정  
 ----------------------------------------------------------------------------
조건1) idx는 자동시퀀스생성  create sequence student_seq ; create sequence st_seq 
조건2)데이타 
--         둘리짱, 90, 80,95
--         또치군, 75, 90,65
--         고길동, 100,95,90
--         마이콜, 60,60,60
--         도우넛, 75,80,75
--         희동이, 80,78,90
insert into student values( 시퀀스, '둘리짱', 90, 80, 95) ;

select name, kor, eng, mat , 
  (kor+eng+mat) as total , round((kor+eng+mat)/3, 2) as avg from student  ;

select name, kor, eng, mat , 
  (kor+eng+mat) as total , floor((kor+eng+mat)/3) as avg from student  ;

select name, kor, eng, mat ,
 (kor+eng+mat) as total , floor((kor+eng+mat)/3) as avg from student  order by avg  desc ;

select name, kor, eng, mat ,
 (kor+eng+mat) as total , floor((kor+eng+mat)/3) as 평균 from student  ;

select name, kor, eng, mat ,
 (kor+eng+mat) as total , floor((kor+eng+mat)/3) as 평균 from student  order by 6 desc ;


해결) 총점, 평균은 무조건 소숫점2자릿, 출력시  총점/평균 제일 많은순으로 출력 order by 
각자) 평균점수 70점부터 축합격 
SQL>  select  empno, ename, nvl(comm, 0) , deptno ,
        case when deptno=10 then 'Accounting'
                  when deptno=20 then  'Reseach'
                  when deptno=30 then   'sales'
                  when deptno=40 then   'Operations'
                  else  '보류'
         end  
      from  emp ;


문제] 사번,사원명, sal, comm ,(sal*12+COMM) 연봉 출력 에러는없는데
     널필드값 null+value=nvl(comm, 1)
SQL> select empno, ename, sal, nvl(comm,1), (sal*12+ nvl(comm,1)) as 연봉   from  emp ;


문제] EMP에서 1982년 1월1일 이후 입사한 사원의
    사번,이름, 업무,입사일자(hiredate)를 소트출력하세요

문제] emp테이블 deptno부서별 count()
 select count(*) 레코드갯수  from emp ;
 select count(empno) 레코드갯수  from emp ;
 select count(comm) 레코드갯수  from emp ;

 select deptno, count(deptno) from emp 
 group by deptno  order by deptno;

수학의 집계함수 sum(),avg(),max(),min(),count()
 select avg(sal) from emp   group by deptno ;
 select deptno, avg(sal) from emp   group by deptno ;  --훨씬더더 가독성이 좋아요
 select deptno, round(avg(sal),2) from emp   group by deptno ;  --훨씬더더 가독성이 좋아요
 select deptno, round(avg(sal),2) from emp   group by deptno  order by 2 desc;  --훨씬더더 가독성이 좋아요

★-----------------------------------------------------------------------------
08-09-화요일내용정리
sosi테이블 수학날짜문자함수 
sosi테이블 select쿼리문응용
emp테이블를 scott.sql실행해서 데이터가져오기
group by/having절 , order by ~~~ 
시퀀스sequence
제한조건 

조인, 서브쿼리 

pk=primary key
 학생정보테이블에서 학번중복X=유일=not null 
  학번    이름   학과코드   졸업여부
  3345   kim    COM      재직
  7788   lee    MAT      재직
  9900   goo    COM      재직
  1100   one    STA      재직  ==>등록할때에러발생 없는 학과코드 사용 fk
  7788   two    COM      재직  ==>등록할때에러발생 학번중복때문에 에러 pk

fk=foreign key
 학과정보테이블 학과코드 중복X=유일=not null 
 학과코드   학과이름  구분
  COM	   컴공     인문
  MAT	   수학     자연
  ENG	   영어영문  언어
  에러COM   통계     공학 ==>pk


문제A] emp테이블 between and 
행번호  empno ename ~~~ deptno
 1
 ~
 5

문제B] emp테이블
행번호  empno ename ~~~ deptno
 6
 ~
 10


--------------------------------------------------------------------------------------
SQL> select  to_char(sal,'$09,999.99'), to_char(sal, 'L09,999.99') from emp;  --앞자리는0으로채워짐
SQL> select  to_char(sal,'$9,999.99'), to_char(sal, 'L9,999.99') from emp;    --L=local지역의 화폐단위 
SQL> select  to_char(sal,'$999.99'), to_char(sal, 'L999.99') from emp;        --자릿수부족 ###표시


----is null,  is not null 조건절로   검색
SQL> select  empno, ename, comm from emp
             where comm  is null ;

----null을 다른값으로 변환 nvl( ) null value
SQL> select  empno, ename, sal, nvl(comm, 0)  from emp;


그룹함수-sum,avg,max,count
SQL>select  empno, ename, deptno,  sum(sal)  from emp; --에러
SQL>select  sum(sal)   from emp; --결과값출력이 단순함

SQL> select  max(avg(sal)) from emp;  --그룹함수가 내포되었습니다 에러발생함
SQL> select  max(avg(sal)) from emp  group by deptno ;  --에러없음 

SQL> select deptno, sum(sal) from emp
         group by deptno;

SQL> select deptno, sum(sal)
         from emp
          where job < > 'MANAGER'
          group by deptno	;


SQL> select  empno, ename, nvl(comm, 0)  from emp;


SQL>  select  empno, ename, nvl(comm, 0) , deptno ,
        case when deptno=10 then 'Accounting'
                  when deptno=20 then  'Reseach'
                  when deptno=30 then   'sales'
                  when deptno=40 then   'Operations'
                  else  '보류'
         end  
      from  emp ;


SQL> select ename,to_char(hiredate,'YYYY"년"fmmm"월"DD"일"')" 입사일" ,
       case to_char(hiredate,'d')
            when '1' then 'sunday'
            when '2' then 'monday'
            when '3' then 'tuesday'
            when '4' then 'wednesday'
            when '5' then 'thursday'
            when '6' then 'friday'
            when '7' then 'saturday'
       end "입사요일"
 from emp 
 order by to_char(hiredate-1,'d') asc;	

	  
문제] 직책이 매니저가 아닌 사원의 부서별 급여합계가 7000이상인 부서반환
SQL> select deptno, sum(sal)
	from emp
	where job < > 'MANAGER'
	group by deptno
	Having  sum(sal) >= 5000  order by deptno  ;


문제] 평균급여 2000이상인 부서의 deptno출력
SQL> select deptno, avg(sal)
	from emp
	group by deptno 
 	having  avg(sal) >= 2000 ;


SQL> select deptno, round(avg(sal),2)
	from emp
	group by deptno 
 	having  avg(sal) >= 2000 ;





